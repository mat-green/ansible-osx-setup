---
- name: Install ZSH Shell
  block:
    - name: Install zsh package
      ansible.builtin.package:
        name: zsh
        state: present
 
    - name: Ensure basic .zshrc is in home directory
      copy:
        content: "" # should this re-run this ansible playbook to complete setup on restart?
        dest: "{{ lookup('env', 'HOME') }}/.zshrc"
        force: false
        group: "{{ lookup('env', 'USER') }}"
        owner: "{{ lookup('env', 'USER') }}"
        mode: 0644
      
    - name: Get the path to shell
      ansible.builtin.shell: which zsh
      register: shell_path

    - name: Ensure shell is in allowed shells
      ansible.builtin.lineinfile:
        path: /etc/shells
        line: "{{ shell_path.stdout }}"
      when: shell_path is not skipped

    - name: Set shell as the default shell
      ansible.builtin.user:
        name: "{{ lookup('env', 'USER') }}"
        shell: "{{ shell_path.stdout }}"
      when: shell_path is not skipped
      notify:
        - Restart session
  become: true
  when: lookup('env', 'SHELL') is not contains('zsh')

- name: Install Oh My ZSH
  block:
    - name: Install supporting oh-my-zsh packages
      become: true
      ansible.builtin.package:
        name: git
        state: present
    
    - name: Check to See if Git Repo Exists
      stat:
        path: "{{ lookup('env', 'HOME') }}/.oh-my-zsh"
      register: oh_my_zsh_folder
    
    - name: Create temporary file
      ansible.builtin.tempfile:
        state: directory
      register: ohmyzsh_temp
      when: oh_my_zsh_folder.stat.exists is not defined or oh_my_zsh_folder.stat.exists == false

    - name: Download Oh My Zsh installation file
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
        dest: "{{ ohmyzsh_temp.path }}/install.sh"
        mode: u=rwx,g=r,o=r
      when: oh_my_zsh_folder.stat.exists is not defined or oh_my_zsh_folder.stat.exists == false

    - name: Install Oh My ZSH
      ansible.builtin.shell: ./install.sh
      args:
        chdir: "{{ ohmyzsh_temp.path }}"
        creates: "{{ lookup('env', 'HOME') }}/.oh-my-zsh"
      when: oh_my_zsh_folder.stat.exists is not defined or oh_my_zsh_folder.stat.exists == false

    - name: Create a default ZSH configuration
      template:
        src: templates/.zshrc.j2
        dest: "{{ lookup('env', 'HOME') }}/.zshrc"
        owner: "{{ lookup('env', 'USER') }}"
        force: yes
      register: oh_my_zsh_configuration
    
    - name: Remove previous .zshrc file
      ansible.builtin.file:
        path: "{{ lookup('env', 'HOME') }}/.zshrc.pre-oh-my-zsh"
        state: absent

    - name: Update current session
      ansible.builtin.shell: "{{ansible_user_shell}} -c 'source {{ lookup('env', 'HOME') }}/.zshrc'"
      when: oh_my_zsh_configuration.changed == true
      
  when: lookup('env', 'SHELL') is contains('zsh')

